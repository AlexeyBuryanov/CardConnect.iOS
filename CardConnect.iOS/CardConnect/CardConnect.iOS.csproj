<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>net8.0-ios</TargetFramework>
        <ImplicitUsings>true</ImplicitUsings>
        <IsBindingProject>true</IsBindingProject>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <AssemblyName>CardConnect.iOS</AssemblyName>
        <RootNamespace>CardConnect.iOS</RootNamespace>
        <PackageId>CardConnect.iOS</PackageId>
        <PackageProjectUrl>https://github.com/AlexeyBuryanov/CardConnect.iOS</PackageProjectUrl>
        <RepositoryUrl>https://github.com/AlexeyBuryanov/CardConnect.iOS</RepositoryUrl>
        <Description>Port for .NET 8.</Description>
        <Version>1.3.0</Version>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <Authors>Oleksii Burianov</Authors>
        <NeutralLanguage>en-US</NeutralLanguage>
        <PackageTags>net8-ios;ios;cardconnect</PackageTags>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <MtouchEnableBitcode>false</MtouchEnableBitcode>

        <!-- Properties used to strip bitcode from frameworks when using Visual Studio for Mac -->
        <_StripBitcodeFromFrameworksMasterAfterTargets Condition="'$(OS)'=='Unix'">_ExpandNativeReferences</_StripBitcodeFromFrameworksMasterAfterTargets>
        <_StripBitcodeFromFrameworksMasterDependsOnTargets Condition="'$(OS)'=='Unix'">_StripBitcodeFromFrameworksOnMac</_StripBitcodeFromFrameworksMasterDependsOnTargets>

        <!-- Properties used to strip bitcode from frameworks when using Visual Studio for Windows -->
        <_StripBitcodeFromFrameworksMasterAfterTargets Condition="'$(OS)'!='Unix'">_ComputeFrameworkFilesToPublish</_StripBitcodeFromFrameworksMasterAfterTargets>
    </PropertyGroup>

    <ItemGroup>
      <None Include="..\..\LICENSE">
        <Pack>True</Pack>
        <PackagePath>\</PackagePath>
      </None>
      <None Include="..\..\README.md">
        <Pack>True</Pack>
        <PackagePath>\</PackagePath>
      </None>
    </ItemGroup>

    <ItemGroup>
        <ObjcBindingApiDefinition Include="ApiDefinition.cs" />
        <ObjcBindingCoreSource Include="Structs.cs" />
    </ItemGroup>

    <ItemGroup>
        <NativeReference Include="..\CardConnectConsumerSDK.framework">
            <Kind>Framework</Kind>
            <ForceLoad>True</ForceLoad>
            <LinkerFlags>-lxml2</LinkerFlags>
        </NativeReference>
    </ItemGroup>

    <Target Name="_StripBitcodeFromFrameworksMasterTarget" 
            Condition="'$(_StripBitcodeFromFrameworksMasterDependsOnTargets)'!='' AND @(_FrameworkNativeReference->Count()) != 0" 
            AfterTargets="$(_StripBitcodeFromFrameworksMasterAfterTargets)" 
            DependsOnTargets="$(_StripBitcodeFromFrameworksMasterDependsOnTargets)" />

    <Target Name="_StripBitcodeFromFrameworksOnMac"
            Condition="('$(OutputType)'!='Library' OR '$(IsAppExtension)'=='True') AND '$(_SdkIsSimulator)'=='False'">
    
        <!-- Find the bitcode_strip command -->
        <Exec Command="xcrun -find bitcode_strip" ConsoleToMSBuild="true">
            <Output TaskParameter="ConsoleOutput" PropertyName="_BitcodeStripCommand" />
        </Exec>

        <!-- Strip the bitcode from frameworks -->
        <Exec Command="$(_BitcodeStripCommand) %(_FrameworkNativeReference.Identity) -r -o %(_FrameworkNativeReference.Identity)" />
    </Target>

    <Target Name="_StripBitcodeFromFrameworksOnWindows"
            Condition="('$(OutputType)'!='Library' OR '$(IsAppExtension)'=='True') AND '$(_SdkIsSimulator)'=='False' AND '$(IsMacEnabled)'=='true'">

        <!-- Strip the bitcode from frameworks -->
        <Exec SessionId="$(BuildSessionId)"
                Command="&quot;%24(xcrun -find bitcode_strip)&quot; %(_FrameworkNativeReference.Identity) -r -o %(_FrameworkNativeReference.Identity)" />

        <CopyFileFromBuildServer 
            SessionId="$(BuildSessionId)" 
            File="%(_FrameworkNativeReference.Identity)" 
            TargetFile="%(_FrameworkNativeReference.Identity)" />    
    </Target>

</Project>